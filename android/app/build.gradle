plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def keystoreProperties = new Properties()
   def keystorePropertiesFile = rootProject.file('key.properties')
   if (keystorePropertiesFile.exists()) {
       keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
   }

android {
    namespace = "com.meganar.learnhub"
    compileSdk = 34
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.meganar.learnhub"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
        // multiDexEnabled true
    }
// dependencies {
//     // implementation 'com.guardsquare:proguard-annotations:1.7.0'
//     implementation 'androidx.annotation:annotation:1.7.0'
//     // If using Razorpay, also add:
//     implementation 'com.razorpay:checkout:1.6.33' // or latest version
//     // implementation 'com.google.android.play:core:1.10.3'
//     // implementation 'com.google.android.play:core-ktx:1.8.1'
//     // implementation 'com.google.android.play:app-update:2.1.0'
//     // implementation 'com.google.android.play:review:2.0.1'
// //     implementation 'com.google.android.play:app-update:2.1.0'
// // implementation 'com.google.android.play:review:2.0.1'
// // implementation 'com.google.android.play:core-common:2.0.3'
// // implementation 'com.google.android.play:core:1.10.3'
//     // implementation 'com.google.android.play:app-update:2.1.0'
//     // implementation 'com.google.android.play:review:2.0.1'
//     // implementation 'com.google.android.play:core-common:2.0.3'
//     // Play Core dependencies (consistent version family)
//         implementation 'com.google.android.play:app-update:2.1.0'
//         implementation 'com.google.android.play:review:2.0.1'
//         implementation 'com.google.android.play:core-common:2.0.3'
//         implementation 'com.google.android.play:feature-delivery:2.1.0' // For deferred components
        
//         // Add multidex support if needed
//         implementation 'androidx.multidex:multidex:2.0.1'





// }
dependencies {
    // Play Core libraries (all from same version family)
    implementation 'com.google.android.play:app-update:2.1.0'
    implementation 'com.google.android.play:review:2.0.1'
    implementation 'com.google.android.play:core-common:2.0.3'
    implementation 'com.google.android.play:feature-delivery:2.1.0' // For deferred components
    
    // Other dependencies
    implementation 'androidx.annotation:annotation:1.7.0'
    implementation 'com.razorpay:checkout:1.6.33'
    // implementation 'androidx.multidex:multidex:2.0.1' // If needed for multidex
}
    // buildTypes {
    //     release {
    //         // TODO: Add your own signing config for the release build.
    //         // Signing with the debug keys for now, so `flutter run --release` works.
    //         signingConfig = signingConfigs.debug
    //     }
    // }
    signingConfigs {
       release {
           keyAlias keystoreProperties['keyAlias']
           keyPassword keystoreProperties['keyPassword']
           storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
           storePassword keystoreProperties['storePassword']
       }
   }
   buildTypes {
       release {
        //    signingConfig signingConfigs.release
        signingConfig signingConfigs.release // or your release config
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
       }
   }
}

flutter {
    source = "../.."
}
